stages:
  - pre-test
  - test

variables:
  PYTHON_VERSION: "3.8"
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_REPOSITORY: ${DOCKER_REPOSITORY_BASE_URI}/tc-data/airflow
  DOCKER_IMAGE_TAG: gitlab-${CI_PIPELINE_ID}
  APP_NAME: "airflow"
  AIRFLOW_GPL_UNIDECODE: "yes"

black:
  stage: pre-test
  tags:
    - k8s
  image: python:${PYTHON_VERSION}
  script:
    - pip install black
    - black --check .

mypy:
  stage: test
  tags:
    - k8s
  image: python:${PYTHON_VERSION}
  script:
    - pip install -r requirements.txt --use-deprecated=legacy-resolver
    - pip install pytest-mypy
    - pytest --mypy --junit-xml=mypy.xml dags
  artifacts:
    when: always
    reports:
      junit: mypy.xml
  except:
    variables:
      - $TEST_DISABLED

flakes:
  stage: test
  tags:
    - k8s
  image: python:${PYTHON_VERSION}
  script:
    - pip install -r requirements.txt --use-deprecated=legacy-resolver
    - pip install pytest-flakes
    - pytest --flakes --junitxml=flakes.xml --ignore=legacy_tests dags
  artifacts:
    when: always
    reports:
      junit: flakes.xml
  except:
    variables:
      - $TEST_DISABLED

test:
  stage: test
  tags:
    - docker
  image: python:${PYTHON_VERSION}
  script:
    - pip install -r requirements.txt --use-deprecated=legacy-resolver
    - pip install pytest-cov
    - python -m pytest --ignore=legacy_tests/ --cov=. --cov-report=xml:cov.xml --cov-report=term --junitxml=pytest.xml
  artifacts:
    when: always
    reports:
      junit: pytest.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage/coverage.xml
  coverage: /^TOTAL.+?(\d+\%)$/

sast:
  stage: test
  tags:
    - k8s
  image: python:${PYTHON_VERSION}
  script:
    - pip install bandit
    - bandit -r . -f xml -ll -o sast.xml
  artifacts:
    when: always
    paths:
      - sast.xml
    reports:
      junit: sast.xml

check_dependencies:
  stage: test
  tags:
    - k8s
  image: python:${PYTHON_VERSION}
  script:
    - pip install -r requirements.txt --use-deprecated=legacy-resolver
    - cat allowed_vulnerabilities.txt | xargs safety check --full-report
